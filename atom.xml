<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kingonlive.github.io/"/>
  <updated>2018-04-08T02:44:04.000Z</updated>
  <id>http://kingonlive.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Volley</title>
    <link href="http://kingonlive.github.io/2018/04/08/Volley/"/>
    <id>http://kingonlive.github.io/2018/04/08/Volley/</id>
    <published>2018-04-08T02:30:29.000Z</published>
    <updated>2018-04-08T02:44:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>volley是谷歌在2013年GoogleIO上推出的网络库，专用于大并发小数据量的网络请求，在架构设计上高内聚低耦合，扩展性和灵活性都非常好．</li><li>官方介绍:　<a href="https://developer.android.com/training/volley/index.html" target="_blank" rel="noopener">https://developer.android.com/training/volley/index.html</a></li><li>volley项目地址:　<a href="https://github.com/google/volley" target="_blank" rel="noopener">https://github.com/google/volley</a></li></ul><h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// Instantiate the RequestQueue.</span><br><span class="line">RequestQueue queue = Volley.newRequestQueue(this);</span><br><span class="line">String url =&quot;http://www.google.com&quot;;</span><br><span class="line"></span><br><span class="line">// Request a string response from the provided URL.</span><br><span class="line">StringRequest stringRequest = new StringRequest(Request.Method.GET, url,</span><br><span class="line">            new Response.Listener&lt;String&gt;() &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void onResponse(String response) &#123;</span><br><span class="line">        // Display the first 500 characters of the response string.</span><br><span class="line">        mTextView.setText(&quot;Response is: &quot;+ response.substring(0,500));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, new Response.ErrorListener() &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void onErrorResponse(VolleyError error) &#123;</span><br><span class="line">        mTextView.setText(&quot;That didn&apos;t work!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// Add the request to the RequestQueue.</span><br><span class="line">queue.add(stringRequest);</span><br></pre></td></tr></table></figure><h1 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h1><p>整体架构大致可以分成四层</p><ul><li>用户接口层，包含RequestQueue/Request/JsonRequest/StringRequest/ImageRequest/ErrorListener等</li><li>核心层：CacheDispatcher和NetworkDispatcher</li><li>基础层：网络和缓存<br><img src="https://raw.githubusercontent.com/kingonlive/WildChild/master/volley/overall.png" alt="N|Solid"></li></ul><h1 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h1><p><img src="https://raw.githubusercontent.com/kingonlive/WildChild/master/volley/classes.png" alt="N|Solid"></p><h1 id="线程模型"><a href="#线程模型" class="headerlink" title="线程模型"></a>线程模型</h1><ul><li>下图是一个示例，实际上有四条network线程一条cache线程</li><li>用户在主线程添加请求，默认将请求加到缓存请求队列，当本地或内存无缓存请求时，请求将被添加到网络请求队列</li><li>缓存线程在有请求结果时将结果派发到UI线程,网络线程在请求网络并解析请求结果后，将请求结果派发到UI线程<br><img src="https://raw.githubusercontent.com/kingonlive/WildChild/master/volley/threadmodel.png" alt="N|Solid"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;volley是谷歌在2013年GoogleIO上推出的网络库，专用于大并发小数据量的网络请求，在架构设计上高内聚低耦合，扩展性和
      
    
    </summary>
    
    
      <category term="开源库" scheme="http://kingonlive.github.io/tags/%E5%BC%80%E6%BA%90%E5%BA%93/"/>
    
  </entry>
  
</feed>
